"use strict";

// Массивы и псевдомассивы

const arr = [1, 2, 3, 4, 5];

// добавление и удаление элементов массива как в конец так и в начало

// Конец массива
// Удаление последнего элемента : pop()
arr.pop();
console.log(arr);

// Добавление элемент в конец массива : push()
arr.push(28);
console.log(arr);

// перебор элементов в массиве
// 1 вариант
let counter = 0;
for (let i = 0; i < arr.length; i ++) {
    console.log(arr[i]);
    counter++;
}
console.log(`Количество элементов в массиве = ${counter}`);

// 2 вариант с помощью for of
for(let value of arr) {
    console.log(value);
}

// 3 вариант : метод forEach()
// Позволяет очень гибко настроить перебор массива добавляя к каждому элементу callbac-функцию
// callback-функции может принимать в себя 3 аргумента:
// 1 - элемент, который мы сейчас перебираем(название любое, например item)
// 2 - порядковый номер(название любое, например i)
// 3 - ссылка на массив, который мы перебираем(название любое, например arr)
arr.forEach(function(item, i, arr) {
    console.log(`${i}: ${item} внутри массива ${arr}`);
});


// split(какой-нибудь знак. Например ,)
// создает массив из строки разделяя последнюю на элементы введенным знаком в аргументах
const str = prompt("", "");
const product = str.split(", ");
console.log(product);

// join(какой-нибудь знак) - объединение элементов массива
// противоположность метода split()
// соединяет элементы массива в одну строку
// в качестве аргумента нужно поставить знак, через какой элементы будут выводиться в строке
const names = ["Alex", "Nick", "Fedor", "Ira", "Egor"];
console.log(names.join("; "));

// sort() сортировка массива
// всегда сортирует элементы массива как строки. В алфавитном порядке
console.log(names.sort());
// но
const num = [11, 5, 2, 76, 21];
console.log(num.sort()); // сортировка идет как строки
// что бы это устранить и отсортировать числа в порядке возростания
// нужно передать в sort() callback-функцию
function compareNum(a, b) {
    return a - b;
}
console.log(num.sort(compareNum));

// нарушение порядковых намеров в массиве
arr[99] = 0;
console.log(arr.length); // получаем длинну массива = 100. Но элементов только 6(1, 2, 3, 4, 28, 0)
// элементы с 5 по 98 пусты(undefined)
console.log(arr);
console.log(arr[87]); 


// ПСЕВДОМАССИВ
// При работе со страницай будем получать только псевдо-массив
// отличие от обычного массива в том, что у псевдомассива НЕТ НИ КАКИХ МЕТОДОВ
// Псевдомассив - это просто структура, которая хранит данные по порядку




